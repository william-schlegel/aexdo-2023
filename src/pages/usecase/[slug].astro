---
import { getCollection, type CollectionEntry } from "astro:content";
import Header from "../../components/header.astro";
import Layout from "../../layouts/Layout.astro";
import Logo from "../../components/logo.astro";
import UsecaseCard from "../../components/usecaseCard.astro";
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const usecases = await getCollection("usecases");
  return usecases.map((entry, idx) => ({
    params: { slug: entry.slug },
    props: { entry, previous: usecases[idx - 1], next: usecases[idx + 1] },
  }));
}

interface Props {
  entry: CollectionEntry<"usecases">;
  previous: CollectionEntry<"usecases"> | undefined;
  next: CollectionEntry<"usecases"> | undefined;
}

const { entry, previous, next } = Astro.props;
const { Content } = await entry.render();
---

<Layout title={entry.data.title}>
  <main class="max-w-6xl mx-auto bg-base-100 relative min-h-screen">
    <Logo />
    <Header />
    <h1 class="text-2xl lg:text-5xl text-center text-aexdo font-bold my-8">
      {entry.data.title}
    </h1>
    <div class="pb-24 px-8 lg:px-16">
      <div class="max-w-[16rem] mx-auto">
        {
          entry.data.logo ? (
            <img
              src={entry.data.logo}
              width={300}
              height={300}
              class="border border-aexdo p-4 shadow"
            />
          ) : null
        }
      </div>
      <div class="prose lg:prose-xl mx-auto mt-12 space-y-8">
        <Content />
        <div class="flex justify-between not-prose">
          {previous ? <UsecaseCard usecase={previous} previous /> : <span />}
          {next ? <UsecaseCard usecase={next} next /> : <span />}
        </div>
      </div>
    </div>
  </main>
</Layout>
